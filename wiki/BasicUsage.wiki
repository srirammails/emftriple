#labels Featured
#sidebar StoreTableOfContents

= Introduction =
This page presents the basic usage of emftriple.

= Basic Usage =

Register the model package and the resource factory that will hold the connection to the RDF store.

{{{
EPackage.Registry.INSTANCE.put(ModelPackage.eNS_URI, ModelPackage.eINSTANCE);
Resource.Factory.Registry.INSTANCE.getProtocolToFactoryMap().put("emftriple", new TDBResourceFactory());
}}}

Storing objects:

{{{
ResourceSet resourceSet = new ResourceSetImpl();
resourceSet.getLoadOptions().put(ETripleOptions.OPTION_DATASOURCE_LOCATION, "data");
Resource resource = resourceSet.createResource(URI.createURI("emftriple://data?graph=http://graph"));

Person person = ModelFactory.eINSTANCE.createPerson();
person.setName("John Doe");

resource.getContents().add(person);
resource.save(null);
}}}

Loading objects:

{{{
ResourceSet resourceSet = new ResourceSetImpl();
Resource resource = resourceSet.createResource(URI.createURI("emftriple://data?graph=http://graph"));
resource.load(null);

Person obj = (Person) EcoreUtil.getObjectByType(resource.getContents(), ModelPackage.eINSTANCE.getPerson());
}}}

Query:

{{{
Sparql sparql = 
    new Sparql()
    .select("?s")
    .where(triple("?s","a",":Person"));

Resource resource = resourceSet.createResource(
    sparql.toURI(URI.createURI("emftriple://data?graph=http://graph")));
resource.load(null);
}}}