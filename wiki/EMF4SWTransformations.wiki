#summary Model Transformations Guide.
#sidebar StoreTableOfContents

<wiki:toc max_depth="3" />

= Introduction =

This section presents the model transformations available in EMF4SW. 


== Ecore to OWL ==

The Ecore to OWL model transformation takes as input any valid Ecore models to produce the equivalent OWL ontology. The model transformations rules are an adaptation of rules found in the ODM specification.

===Mapping Rules===

This section describes the main rules that are implemented in the Ecore to OWL transformation.

|| Ecore || OWL ||
|| EClass || OWLClass ||
|| EAttribute || DataProperty ||
|| EReference || ObjectProperty ||

===Java code===

The following code excerpt shows how to execute this model transformation from Java code. 

{{{
// Register Resource Factories
Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put("ecore", new XMIResourceFactoryImpl());
Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put("owl", new OWLXMLResourceFactory());

Resource resource = Models.resource(URI.createURI("metamodel.ecore"));
resource.load(null);
		
Ecore2OWL e2o = new Ecore2OWL();
Resource owl = e2o.apply(resource);
		
// URI where the OWL file will be saved
owl.setURI(URI.createURI("metamodel.owl"));
owl.save(null);
}}}

== OWL to Ecore ==

===Mapping Rules===

===Java code===

{{{
// Register Resource Factories
Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put("ecore", new XMIResourceFactoryImpl());
Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put("owl", new OWLXMLResourceFactory());

Resource resource = Models.resource(URI.createURI("ontology.owl"));
resource.load(null);
		
OWL2Ecore o2e = new OWL2Ecore();
Resource model = o2e.apply(resource);

// URI where the Ecore file will be saved		
model.setURI(URI.createURI("ontology.ecore"));
model.save(null);
}}}